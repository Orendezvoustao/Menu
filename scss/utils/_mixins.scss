//* Automatic Color -----------------------------------// 

//Choose background color and Text Color automatic (depend of background-color)//

@mixin bg_textColor($textColor: $colorAdd_main) {
  background-color: $textColor;

  @if (lightness($textColor) > 70%) {
    $textColor:$textColor_default;
  } @else {
    $textColor: $textColor_Light;
  }
  color: $textColor;
}

//* FLEXBOX mixins ------------------------------------------//

//Flexbox Column
@mixin flexCol ($justify: initial, $align: initial){
  display: flex;
  flex-direction: column;

  @if($justify == "cen"){
    justify-content: center;
  }@elseif($justify == "spA"){
    justify-content: space-around;
  }@elseif($justify == "spB"){
    justify-content: space-between;
  }@elseif($justify == "spE"){
    justify-content: space-evenly;
  }@elseif($justify == "base"){
    justify-content: baseline;
  }@else{
    justify-content:$justify;
  }
 
  @if($align == "cen"){
    align-items: center;
  }@elseif($align == "flexS"){
    align-items: flex-start;
  }@elseif($align == "flexE"){
    align-items: flex-end;
  }@elseif($align == "st"){
    align-items: stretch;
  }@elseif($align == "base"){
    align-items: baseline;
  }@else{
    align-items:$align;
  }

}

//Flexbox Row
@mixin flexRow ($justify: initial, $align: initial){
  display: flex;
  flex-direction: row;

  @if($justify == "cen"){
    justify-content: center;
  }@elseif($justify == "spA"){
    justify-content: space-around;
  }@elseif($justify == "spB"){
    justify-content: space-between;
  }@elseif($justify == "spE"){
    justify-content: space-evenly;
  }@elseif($justify == "base"){
    justify-content: baseline;
  }@else{
    justify-content:$justify;
  }

  @if($align == "cen"){
    align-items: center;
  }@elseif($align == "flexS"){
    align-items: flex-start;
  }@elseif($align == "flexE"){
    align-items: flex-end;
  }@elseif($align == "st"){
    align-items: stretch;
  }@elseif($align == "base"){
    align-items: baseline;
  }@else{
    align-items:$align;
  }

}

//* BREAKPOINTS mixins for mobile First ---------------------------// 

//For Tablet

@mixin mobile-limit {
  @media screen and (min-width: map-get($breakpoints, mobile)){
    @content;
  } 
}

//For tablet-only

@mixin tablet-only {
  @media screen and (min-width: map-get($breakpoints, mobile)) and (max-width: map-get($breakpoints, tablet)){
    @content;
  }
}
//For Desktop

@mixin tablet-limit {
  @media screen and (min-width: map-get($breakpoints, tablet)){
    @content;
  }
}

//For big desktop

@mixin desktop-limit {
  @media screen and (min-width: map-get($breakpoints, desktop)){
    @content;
  }
}


//* Loader Letter mixins for nth-child

@mixin incrementDelayForLetter {

  @for $i from 1 through 13 {
    &:nth-child(#{$i}){
      animation-delay: (0.07s*$i);
    }
  }
}

//* Loader Circle position mixins for nth-child

@mixin circlePositionForChild {

  @for $p from 1 through 20 {
    &:nth-child(#{$p}){
      transform: rotate(calc(-18deg * #{$p}));
    }
  }
}

//* Loader Circle Delay mixins for nth-child

@mixin incrementDelayForCircle {

  @for $c from 1 through 20 {
    &:nth-child(#{$c})::before{
      animation-delay: (0.05s*$c);
    }
  }
}

//* Appearance Dish mixins

@mixin incrementDelayForDish {

  @for $d from 1 through 5 {
    &:nth-child(#{$d}){
      animation-delay: (0.3s*$d);
    }
  }
}